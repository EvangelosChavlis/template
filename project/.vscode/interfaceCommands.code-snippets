{
    "Commands Interface": {
      "prefix": "interfaceCommands",
      "body": [
        "// source",
        "using server.src.Domain.Dto.Common;",
        "using server.src.Domain.Dto.${Entity};",
        "",
        "namespace server.src.Application.${Entity}s.Interfaces;",
        "",
        "/// <summary>",
        "/// Defines methods for managing ${Entity}s, including creation, updating, and deletion.",
        "/// </summary>",
        "public interface I${Entity}Commands",
        "{",
        "    /// <summary>",
        "    /// Initializes multiple ${Entity}s in bulk.",
        "    /// </summary>",
        "    /// <param name=\"dto\">A list of ${Entity} data transfer objects to be created.</param>",
        "    /// <param name=\"token\">Optional cancellation token.</param>",
        "    /// <returns>A response indicating the success or failure of the bulk initialization process.</returns>",
        "    Task<Response<string>> Initialize${Entity}sAsync(List<${Entity}Dto> dto,",
        "        CancellationToken token = default);",
        "",
        "    /// <summary>",
        "    /// Creates a new ${Entity}.",
        "    /// </summary>",
        "    /// <param name=\"dto\">The data transfer object containing ${Entity} details.</param>",
        "    /// <param name=\"token\">Optional cancellation token.</param>",
        "    /// <returns>A response containing the result message of the operation.</returns>",
        "    Task<Response<string>> Create${Entity}Async(${Entity}Dto dto,",
        "        CancellationToken token = default);",
        "",
        "    /// <summary>",
        "    /// Updates an existing ${Entity}.",
        "    /// </summary>",
        "    /// <param name=\"id\">The unique identifier of the ${Entity} to update.</param>",
        "    /// <param name=\"dto\">The data transfer object containing updated ${Entity} details.</param>",
        "    /// <param name=\"token\">Optional cancellation token.</param>",
        "    /// <returns>A response containing the result message of the update operation.</returns>",
        "    Task<Response<string>> Update${Entity}Async(Guid id, ${Entity}Dto dto,",
        "        CancellationToken token = default);",
        "",
        "    /// <summary>",
        "    /// Deletes a ${Entity} by its unique identifier and version.",
        "    /// </summary>",
        "    /// <param name=\"id\">The unique identifier of the ${Entity} to delete.</param>",
        "    /// <param name=\"version\">The version of the ${Entity} to ensure concurrency control during deletion.</param>",
        "    /// <param name=\"token\">An optional cancellation token to cancel the operation if needed.</param>",
        "    /// <returns>A response containing the result message of the deletion operation, including success or failure details.</returns>",
        "    Task<Response<string>> Delete${Entity}Async(Guid id,",
        "        Guid version, CancellationToken token = default);",
        "}"
      ],
      "description": "Generates Commands Interface"
    }
  }
  