{
    "Interface Queries": {
      "prefix": "interfaceQueries",
      "body": [
        "// source",
        "using server.src.Domain.Dto.Auth;",
        "using server.src.Domain.Dto.Common;",
        "using server.src.Domain.Models.Common;",
        "",
        "namespace server.src.Application.Auth.${Entity}.Interfaces;",
        "",
        "/// <summary>",
        "/// Defines methods for retrieving ${Entity}-related data, including lists, details, and selection options.",
        "/// </summary>",
        "public interface I${Entity}Queries",
        "{",
        "    /// <summary>",
        "    /// Retrieves a paginated list of ${Entity} based on query parameters.",
        "    /// </summary>",
        "    /// <param name=\"urlQuery\">Query parameters for filtering and pagination.</param>",
        "    /// <param name=\"token\">Optional cancellation token.</param>",
        "    /// <returns>A list response containing ${Entity}.</returns>",
        "    Task<ListResponse<List<Item${Entity}Dto>>> Get${Entity}Async(UrlQuery urlQuery,",
        "        CancellationToken token = default);",
        "",
        "    /// <summary>",
        "    /// Retrieves a paginated list of ${Entity} assigned to a specific user.",
        "    /// </summary>",
        "    /// <param name=\"id\">The unique identifier of the user.</param>",
        "    /// <param name=\"urlQuery\">Query parameters for filtering and pagination.</param>",
        "    /// <param name=\"token\">Optional cancellation token.</param>",
        "    /// <returns>A list response containing ${Entity} assigned to the specified user.</returns>",
        "    Task<ListResponse<List<Item${Entity}Dto>>> Get${Entity}ByUserIdAsync(Guid id, UrlQuery urlQuery,",
        "        CancellationToken token = default);",
        "",
        "    /// <summary>",
        "    /// Retrieves a list of ${Entity} for selection purposes.",
        "    /// </summary>",
        "    /// <param name=\"token\">Optional cancellation token.</param>",
        "    /// <returns>A response containing a list of ${Entity} picker items.</returns>",
        "    Task<Response<List<Picker${Entity}Dto>>> Get${Entity}PickerAsync(CancellationToken token = default);",
        "",
        "    /// <summary>",
        "    /// Retrieves detailed information about a specific ${Entity} by its unique identifier.",
        "    /// </summary>",
        "    /// <param name=\"id\">The unique identifier of the ${Entity}.</param>",
        "    /// <param name=\"token\">Optional cancellation token.</param>",
        "    /// <returns>A response containing detailed ${Entity} information.</returns>",
        "    Task<Response<Item${Entity}Dto>> Get${Entity}ByIdAsync(Guid id,",
        "        CancellationToken token = default);",
        "}"
      ],
      "description": "Generates an entity query interface"
    }
  }
  