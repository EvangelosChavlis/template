{
    "Initialize Command": {
      "prefix": "initializeCommand",
      "body": [
        "// packages",
        "using System.Net;",
        "using System.Text;",
        "",
        "// source",
        "using server.src.Application.Weather.Collections.Warnings.Interfaces;",
        "using server.src.Application.Common.Interfaces;",
        "using server.src.Domain.Dto.Common;",
        "",
        "namespace server.src.Application.Weather.Collections.Warnings.Commands;",
        "",
        "public record Initialize${Entity}Command(List<${Entity}Dto> Dto) : IRequest<Response<string>>;",
        "",
        "public class Initialize${Entity}Handler : IRequestHandler<Initialize${Entity}Command, Response<string>>",
        "{",
        "    private readonly I${Entity}Commands _${Entity}Commands;",
        "",
        "    public Initialize${Entity}Handler(I${Entity}Commands ${Entity}Commands)",
        "    {",
        "        _${Entity}}Commands = ${Entity}Commands;",
        "    }",
        "",
        "    public async Task<Response<string>> Handle(Initialize${Entity}Command command, CancellationToken token = default)",
        "    {",
        "        var success = true;",
        "        var messageBuilder = new StringBuilder();",
        "",
        "        foreach (var item in command.Dto)",
        "        {",
        "            var result = await _${Entity}Commands.Create${Entity}Async(item, token);",
        "            success &= result.Success;",
        "",
        "            messageBuilder.AppendLine(result.Data);",
        "        }",
        "",
        "        var message = messageBuilder.ToString().TrimEnd();",
        "",
        "        if (!success)",
        "            return new Response<string>()",
        "                .WithMessage(\"Error initializing ${Entity}s.\")",
        "                .WithStatusCode((int)HttpStatusCode.InternalServerError)",
        "                .WithSuccess(false)",
        "                .WithData(\"Failed to initialize ${Entity}s.\");",
        "",
        "        return new Response<string>()",
        "            .WithMessage(\"Success initializing ${Entity}s.\")",
        "            .WithStatusCode((int)HttpStatusCode.OK)",
        "            .WithSuccess(success)",
        "            .WithData(message);",
        "    }",
        "}"
      ],
      "description": "Creates a command handler for initializing a list of entities."
    }
  }
  